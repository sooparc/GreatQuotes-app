{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainHeader.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/lib/api.js","components/hooks/use-http.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainHeader.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","QuoteItem","props","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","FIREBASE_DOMAIN","getAllQuotes","a","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","loacation","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","onFocus","isLoading","loading","control","htmlFor","ref","rows","actions","AddQuotes","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetails","match","useRouteMatch","path","exact","url","MainHeader","header","logo","role","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cea4e1e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__bQTfS\",\"logo\":\"MainHeader_logo__lqfw5\",\"nav\":\"MainHeader_nav__dqN8e\",\"active\":\"MainHeader_active__1uUk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","const FIREBASE_DOMAIN = \"https://quoteapp-6bfb0-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/add\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\n\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { getAllQuotes } from \"../components/lib/api\";\nimport useHttp from \"../components/hooks/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const focusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finshEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(loacation) => \"Are you sure you want to leave this page?\"}\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onFocus={focusHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={finshEnteringHandler}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport QuoteFrom from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { addQuote } from \"../components/lib/api\";\n\nconst AddQuotes = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return (\n    <Fragment>\n      <QuoteFrom\n        isLoading={status === \"pending\"}\n        onAddQuote={addQuoteHandler}\n      />\n    </Fragment>\n  );\n};\n\nexport default AddQuotes;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from \"./CommentItem\";\nimport classes from \"./CommentsList.module.css\";\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p className=\"centered\"> No quote found.</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n","import { NavLink } from \"react-router-dom\";\nimport classes from \"../layout/MainHeader.module.css\";\n\nconst MainHeader = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>\n        Great Quotes\n        <span role=\"img\" aria-label=\"clover\">\n          <span> </span>\n          ☘️\n        </span>\n      </div>\n\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/add\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from \"react\";\n\nimport classes from \"./Layout.module.css\";\nimport MainHeader from \"./MainHeader\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page Not Found</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport AddQuotes from \"./pages/AddQuotes\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/add\">\n          <AddQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetails />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}